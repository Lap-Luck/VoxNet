// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PositionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView ImageX;

  @NonNull
  public final TextView ImageY;

  @NonNull
  public final TextView ImageZ;

  @NonNull
  public final Button XAdd;

  @NonNull
  public final Button XMinus;

  @NonNull
  public final Button YAdd;

  @NonNull
  public final Button YMinus;

  @NonNull
  public final Button ZAdd;

  @NonNull
  public final Button ZMinus;

  private PositionBinding(@NonNull ConstraintLayout rootView, @NonNull TextView ImageX,
      @NonNull TextView ImageY, @NonNull TextView ImageZ, @NonNull Button XAdd,
      @NonNull Button XMinus, @NonNull Button YAdd, @NonNull Button YMinus, @NonNull Button ZAdd,
      @NonNull Button ZMinus) {
    this.rootView = rootView;
    this.ImageX = ImageX;
    this.ImageY = ImageY;
    this.ImageZ = ImageZ;
    this.XAdd = XAdd;
    this.XMinus = XMinus;
    this.YAdd = YAdd;
    this.YMinus = YMinus;
    this.ZAdd = ZAdd;
    this.ZMinus = ZMinus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PositionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PositionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.position, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PositionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ImageX;
      TextView ImageX = ViewBindings.findChildViewById(rootView, id);
      if (ImageX == null) {
        break missingId;
      }

      id = R.id.ImageY;
      TextView ImageY = ViewBindings.findChildViewById(rootView, id);
      if (ImageY == null) {
        break missingId;
      }

      id = R.id.ImageZ;
      TextView ImageZ = ViewBindings.findChildViewById(rootView, id);
      if (ImageZ == null) {
        break missingId;
      }

      id = R.id.X_Add;
      Button XAdd = ViewBindings.findChildViewById(rootView, id);
      if (XAdd == null) {
        break missingId;
      }

      id = R.id.X_Minus;
      Button XMinus = ViewBindings.findChildViewById(rootView, id);
      if (XMinus == null) {
        break missingId;
      }

      id = R.id.Y_Add;
      Button YAdd = ViewBindings.findChildViewById(rootView, id);
      if (YAdd == null) {
        break missingId;
      }

      id = R.id.Y_Minus;
      Button YMinus = ViewBindings.findChildViewById(rootView, id);
      if (YMinus == null) {
        break missingId;
      }

      id = R.id.Z_Add;
      Button ZAdd = ViewBindings.findChildViewById(rootView, id);
      if (ZAdd == null) {
        break missingId;
      }

      id = R.id.Z_Minus;
      Button ZMinus = ViewBindings.findChildViewById(rootView, id);
      if (ZMinus == null) {
        break missingId;
      }

      return new PositionBinding((ConstraintLayout) rootView, ImageX, ImageY, ImageZ, XAdd, XMinus,
          YAdd, YMinus, ZAdd, ZMinus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
