// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainPart1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Wybierz;

  @NonNull
  public final TextView Wynik;

  @NonNull
  public final Button Zapisz;

  @NonNull
  public final Button buttonAdd;

  @NonNull
  public final Button buttonColorB;

  @NonNull
  public final Button buttonColorG;

  @NonNull
  public final Button buttonColorR;

  @NonNull
  public final Button buttonDel;

  @NonNull
  public final Button buttonMoveXM;

  @NonNull
  public final Button buttonMoveXP;

  @NonNull
  public final Button buttonMoveYM;

  @NonNull
  public final Button buttonMoveYP;

  @NonNull
  public final Button buttonMoveZM;

  @NonNull
  public final Button buttonMoveZP;

  @NonNull
  public final Button buttonZoomMinus;

  @NonNull
  public final Button buttonZoomPlus;

  @NonNull
  public final EditText nazwa;

  @NonNull
  public final TableLayout tableLayout;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText zawartosc;

  private MainPart1Binding(@NonNull ConstraintLayout rootView, @NonNull Button Wybierz,
      @NonNull TextView Wynik, @NonNull Button Zapisz, @NonNull Button buttonAdd,
      @NonNull Button buttonColorB, @NonNull Button buttonColorG, @NonNull Button buttonColorR,
      @NonNull Button buttonDel, @NonNull Button buttonMoveXM, @NonNull Button buttonMoveXP,
      @NonNull Button buttonMoveYM, @NonNull Button buttonMoveYP, @NonNull Button buttonMoveZM,
      @NonNull Button buttonMoveZP, @NonNull Button buttonZoomMinus, @NonNull Button buttonZoomPlus,
      @NonNull EditText nazwa, @NonNull TableLayout tableLayout, @NonNull TextView textView,
      @NonNull EditText zawartosc) {
    this.rootView = rootView;
    this.Wybierz = Wybierz;
    this.Wynik = Wynik;
    this.Zapisz = Zapisz;
    this.buttonAdd = buttonAdd;
    this.buttonColorB = buttonColorB;
    this.buttonColorG = buttonColorG;
    this.buttonColorR = buttonColorR;
    this.buttonDel = buttonDel;
    this.buttonMoveXM = buttonMoveXM;
    this.buttonMoveXP = buttonMoveXP;
    this.buttonMoveYM = buttonMoveYM;
    this.buttonMoveYP = buttonMoveYP;
    this.buttonMoveZM = buttonMoveZM;
    this.buttonMoveZP = buttonMoveZP;
    this.buttonZoomMinus = buttonZoomMinus;
    this.buttonZoomPlus = buttonZoomPlus;
    this.nazwa = nazwa;
    this.tableLayout = tableLayout;
    this.textView = textView;
    this.zawartosc = zawartosc;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainPart1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainPart1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_part1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainPart1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Wybierz;
      Button Wybierz = ViewBindings.findChildViewById(rootView, id);
      if (Wybierz == null) {
        break missingId;
      }

      id = R.id.Wynik;
      TextView Wynik = ViewBindings.findChildViewById(rootView, id);
      if (Wynik == null) {
        break missingId;
      }

      id = R.id.Zapisz;
      Button Zapisz = ViewBindings.findChildViewById(rootView, id);
      if (Zapisz == null) {
        break missingId;
      }

      id = R.id.button_add;
      Button buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.button_color_b;
      Button buttonColorB = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorB == null) {
        break missingId;
      }

      id = R.id.button_color_g;
      Button buttonColorG = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorG == null) {
        break missingId;
      }

      id = R.id.button_color_r;
      Button buttonColorR = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorR == null) {
        break missingId;
      }

      id = R.id.button_del;
      Button buttonDel = ViewBindings.findChildViewById(rootView, id);
      if (buttonDel == null) {
        break missingId;
      }

      id = R.id.button_move_x_m;
      Button buttonMoveXM = ViewBindings.findChildViewById(rootView, id);
      if (buttonMoveXM == null) {
        break missingId;
      }

      id = R.id.button_move_x_p;
      Button buttonMoveXP = ViewBindings.findChildViewById(rootView, id);
      if (buttonMoveXP == null) {
        break missingId;
      }

      id = R.id.button_move_y_m;
      Button buttonMoveYM = ViewBindings.findChildViewById(rootView, id);
      if (buttonMoveYM == null) {
        break missingId;
      }

      id = R.id.button_move_y_p;
      Button buttonMoveYP = ViewBindings.findChildViewById(rootView, id);
      if (buttonMoveYP == null) {
        break missingId;
      }

      id = R.id.button_move_z_m;
      Button buttonMoveZM = ViewBindings.findChildViewById(rootView, id);
      if (buttonMoveZM == null) {
        break missingId;
      }

      id = R.id.button_move_z_p;
      Button buttonMoveZP = ViewBindings.findChildViewById(rootView, id);
      if (buttonMoveZP == null) {
        break missingId;
      }

      id = R.id.button_zoom_minus;
      Button buttonZoomMinus = ViewBindings.findChildViewById(rootView, id);
      if (buttonZoomMinus == null) {
        break missingId;
      }

      id = R.id.button_zoom_plus;
      Button buttonZoomPlus = ViewBindings.findChildViewById(rootView, id);
      if (buttonZoomPlus == null) {
        break missingId;
      }

      id = R.id.nazwa;
      EditText nazwa = ViewBindings.findChildViewById(rootView, id);
      if (nazwa == null) {
        break missingId;
      }

      id = R.id.tableLayout;
      TableLayout tableLayout = ViewBindings.findChildViewById(rootView, id);
      if (tableLayout == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.zawartosc;
      EditText zawartosc = ViewBindings.findChildViewById(rootView, id);
      if (zawartosc == null) {
        break missingId;
      }

      return new MainPart1Binding((ConstraintLayout) rootView, Wybierz, Wynik, Zapisz, buttonAdd,
          buttonColorB, buttonColorG, buttonColorR, buttonDel, buttonMoveXM, buttonMoveXP,
          buttonMoveYM, buttonMoveYP, buttonMoveZM, buttonMoveZP, buttonZoomMinus, buttonZoomPlus,
          nazwa, tableLayout, textView, zawartosc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
